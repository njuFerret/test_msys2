name: Test msys2 

on:
  push:
    branches: [ "main" ]

jobs:
  prepare:
    name: set msys2 env
    runs-on: 
      - windows-2022

    steps:
      # - name: check out openssl
      #   uses: actions/checkout@v4
      #   with:
      #     repository: 'openssl/openssl'
      #     ref: 'openssl-${{ inputs.openssl-version }}'
      - name: check out 
        uses: actions/checkout@v4        

      # - uses: msys2/setup-msys2@v2
      #   with:
      #     msystem: UCRT64          
      #     update: false
      #     # install: >-
      #     #   perl

      - name: get clazy
        uses: actions/checkout@v4.1.1
        with:
          repository: 'KDE/clazy'
          # ref: 'openssl-${{ inputs.openssl-version }}'
          ref: 'v1.12'
          path: clazy

      
      - name: Config Enviroment and build
        shell: cmd
        run: |
          set mingw=MinGW-x86_64-13.1.0-release-posix-seh-ucrt-rt_v11-rev1
          set START=%CD%
          set CLANG_INSTALL_DIR=D:\Dev\libclang
          set CLAZY_INSTALL_DIR=%CLANG_INSTALL_DIR%
          set install_prefix=D:\Dev
          # 第一个参数为Qt版本, 第二个参数开始为路径如MinGW\bin
          # python ./utils/msys2_mod.py %QT_Ver% %CD%\MinGW\bin
          curl -L -o  %mingw%.7z  https://github.com/njuFerret/qt6_mingw_build/releases/download/deps/%mingw%.7z          
          curl -L -o ninja-win.zip https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-win.zip
          curl -L -o libclang.7z https://github.com/njuFerret/actions/releases/download/build_20241025/libclang-19.1.2_%mingw%_static.7z
          7z x %mingw%.7z
          7z x ninja-win.zip -oninja
          mkdir %CLANG_INSTALL_DIR%
          7z x libclang.7z -o%CLANG_INSTALL_DIR%\..\
          set PATH=%CD%\ninja;%CD%\MinGW\bin;%PATH%
          cmake -DCMAKE_INSTALL_PREFIX=%CLAZY_INSTALL_DIR% -DCLANG_LIBRARY_IMPORT="%CLANG_INSTALL_DIR%/lib/libclang.a" -DCMAKE_BUILD_TYPE=Release -G "Ninja" -B./clazy/build -S./clazy

          cmake --build "%CLAZY_SRC%/build" --parallel

          cmake --build "%CLAZY_SRC%/build" --parallel --target install




      # - name: build
      #   shell: msys2 {0}
      #   run: |
      #     # g++ -v        
      #     echo QT_ROOT=$QT_ROOT  
      #     cd openssl 
      #     # ls -l          
      #     ./config --prefix=$QT_ROOT/3rdParty/openssl          
      #     echo ---------------------patch Makefile------------------
      #     # 注意！注意！注意！
      #     # 此处修改 Makefile 文件中 00-base-templates.conf 的绝对路径为相对路径，
      #     # /d/path1/path2/Configurations/00-base-templates.conf => Configurations/00-base-templates.conf
      #     sed -i "s|$(pwd)/||g" Makefile
      #     echo ------------------------ compile... -------------------
      #     mingw32-make -j
      #     # 尼玛, 安装文档会出错！！！！
      #     mingw32-make install_sw install_ssldirs -j
      #     ls $QT_ROOT -l


      - name: check build file
        shell: cmd
        run: |
           echo show files in 'D:\Dev\libclang'
           cd /d D:
           dir D:\Dev\libclang
           dir D:\Dev\libclang\bin
           dir *clazy* /s